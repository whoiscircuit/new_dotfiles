#!/usr/bin/env zsh
# command line interface for xinyminutes.com tutorials with syntax highlighting using bat
# the code is inspired by https://github.com/YesSeri/xny-cli
set -e

# check dependencies

for dep in {pup,jq,bat}; do
  if ! command -v $dep &>/dev/null; then
    echo "'$dep' is required for xiny to work." >&2
    exit 1;
  fi
done

# parse arguments
if [[ -z "$1" ]]; then
  printf "Enter Language: "
  read  LANGUAGE
else
  LANGUAGE="$1"
  shift;
fi

# initialize
XINY_DIR="${XDG_CACHE_HOME:-$HOME/.cache}/xiny"
LIST_FILE="$XINY_DIR/list.txt"
[[ ! -d "$XINY_DIR" ]] && mkdir "$XINY_DIR" -p
BASE_URL="https://learnxinyminutes.com"
LANGUAGE="$(echo "$LANGUAGE" | tr '[:upper:]' '[:lower:]')" # format input
FULL_URL="$BASE_URL/$LANGUAGE"

# check cache for the language
if [[ -d "$XINY_DIR/$LANGUAGE" ]]; then
   exec bat $XINY_DIR/$LANGUAGE/*
fi

# refresh language list if old or not available for better completion
if [[ ! -f "$LIST_FILE" ]] || find "$LIST_FILE" -mtime +14 | grep "."; then
  echo "refreshing list of languages..."
  curl -Ss "$BASE_URL" | pup 'table td.name a json{}' | jq -r '.[] | [.href] | @tsv' | while read x; do basename "$x"; done > $LIST_FILE
fi

# get the url of the tutorial file in the selected language
echo "getting url for language tutorial file..."
FILE_URL=$(curl -Ss $FULL_URL | pup 'p.filelink a attr{href}' | head -n1)
FILE_PATH="$XINY_DIR/$LANGUAGE/$(basename "$FILE_URL")"

if [[ -n "$FILE_URL" ]]; then
echo "downloading the tutorial '$(basename $FILE_URL)'..."
    mkdir -p "$XINY_DIR/$LANGUAGE"
    if ! curl -Ss $BASE_URL$FILE_URL > "$FILE_PATH"; then
      rm "$FILE_PATH"
    fi
    exec bat "$FILE_PATH"
else
    echo "No data found for $LANGUAGE" >&2
    echo -e "Please run this script with any programming language as a parameter, like so:\n xiny python" >&2
fi

